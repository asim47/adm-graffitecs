/*
P.S: if you like my content maybe you will become a donator and donate some money? That helps me to create new awesome materials. https://www.paypal.me/melnik909
*/

/*
I've used nested span elements for creating an animation of square turn and creating an arrow animation. But if you know other a solution please email me
melnik909@ya.ru
*/

/*
=====
LEVEL 1. CORE STYLES
=====
*/

.toggle {
  --uiToggleSize: var(--toggleSize, 20px);
  --uiToggleIndent: var(--toggleIndent, 0.4em);
  --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
  --uiToggleColor: var(--toggleColor, #000);
  --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
  --uiToggleBgColor: var(--toggleBgColor, #fff);
  --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
  --uiToggleArrowColor: var(--toggleArrowColor, #fff);

  display: inline-block;
  position: relative;
}

.toggle__input {
  position: absolute;
  left: -99999px;
}

.toggle__label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  min-height: var(--uiToggleSize);
  padding-left: -webkit-calc(var(--uiToggleSize) + var(--uiToggleIndent));
  padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));
}

.toggle__label:before,
.toggle__label:after {
  content: '';
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 1em;
  height: 1em;
  font-size: var(--uiToggleSize);

  position: absolute;
  left: 0;
  top: 0;
}

.toggle__label:before {
  border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
  z-index: 2;
}

.toggle__input:disabled ~ .toggle__label:before {
  border-color: var(--uiToggleDisabledColor);
}

.toggle__input:focus ~ .toggle__label:before {
  -webkit-box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
          box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled):checked:focus ~ .toggle__label:after {
  -webkit-box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
          box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled) ~ .toggle__label:after {
  background-color: var(--uiToggleColor);
  opacity: 0;
}

.toggle__input:not(:disabled):checked ~ .toggle__label:after {
  opacity: 1;
}

.toggle__text {
  margin-top: auto;
  margin-bottom: auto;
}

/*
  The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
  */

.toggle__text:before {
  content: '';
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 0;
  height: 0;
  font-size: var(--uiToggleSize);

  border-left-width: 0;
  border-bottom-width: 0;
  border-left-style: solid;
  border-bottom-style: solid;
  border-color: var(--uiToggleArrowColor);

  position: absolute;
  top: 0.5428em;
  left: 0.2em;
  z-index: 3;

  -webkit-transform-origin: left top;

      -ms-transform-origin: left top;

          transform-origin: left top;
  -webkit-transform: rotate(-40deg) skew(10deg);
      -ms-transform: rotate(-40deg) skew(10deg);
          transform: rotate(-40deg) skew(10deg);
}

.toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before {
  width: 0.5em;
  height: 0.25em;
  border-left-width: var(--uiToggleArrowWidth);
  border-bottom-width: var(--uiToggleArrowWidth);
  will-change: width, height;
  -webkit-transition: width 0.1s ease-out 0.2s, height 0.2s ease-out;
  -o-transition: width 0.1s ease-out 0.2s, height 0.2s ease-out;
  transition: width 0.1s ease-out 0.2s, height 0.2s ease-out;
}

/*
  =====
  LEVEL 2. PRESENTATION STYLES
  =====
  */

/* 
  The demo skin
  */

.toggle__label:before,
.toggle__label:after {
  border-radius: 2px;
}

/* 
  The animation of switching states
  */

.toggle__input:not(:disabled) ~ .toggle__label:before,
.toggle__input:not(:disabled) ~ .toggle__label:after {
  opacity: 1;
  -webkit-transform-origin: center center;
      -ms-transform-origin: center center;
          transform-origin: center center;
  will-change: transform;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  transition: -webkit-transform 0.2s ease-out;
  -o-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out, -webkit-transform 0.2s ease-out;
}

.toggle__input:not(:disabled) ~ .toggle__label:before {
  -webkit-transform: rotateY(0deg);
          transform: rotateY(0deg);
  -webkit-transition-delay: 0.2s;
       -o-transition-delay: 0.2s;
          transition-delay: 0.2s;
}

.toggle__input:not(:disabled) ~ .toggle__label:after {
  -webkit-transform: rotateY(90deg);
          transform: rotateY(90deg);
}

.toggle__input:not(:disabled):checked ~ .toggle__label:before {
  -webkit-transform: rotateY(-90deg);
          transform: rotateY(-90deg);
  -webkit-transition-delay: 0s;
       -o-transition-delay: 0s;
          transition-delay: 0s;
}

.toggle__input:not(:disabled):checked ~ .toggle__label:after {
  -webkit-transform: rotateY(0deg);
          transform: rotateY(0deg);
  -webkit-transition-delay: 0.2s;
       -o-transition-delay: 0.2s;
          transition-delay: 0.2s;
}

.toggle__text:before {
  opacity: 0;
}

.toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before {
  opacity: 1;
  -webkit-transition: opacity 0.1s ease-out 0.3s, width 0.1s ease-out 0.5s,
    height 0.2s ease-out 0.3s;
  -o-transition: opacity 0.1s ease-out 0.3s, width 0.1s ease-out 0.5s,
    height 0.2s ease-out 0.3s;
  transition: opacity 0.1s ease-out 0.3s, width 0.1s ease-out 0.5s,
    height 0.2s ease-out 0.3s;
}

/*
  =====
  LEVEL 3. SETTINGS
  =====
  */

.toggle {
  --toggleColor: #296294;
  --toggleBgColor: #337ab7;
  --toggleSize: 20px;
}